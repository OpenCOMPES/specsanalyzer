name: linting

# Triggers the workflow on push for all branches
on:
  push:
    branches:
      - '*'
    paths-ignore:
      pyproject.toml

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      # Check out repo and set up Python
      - uses: actions/checkout@v3
        with:
          lfs: true

# see https://stackoverflow.com/questions/57612428/cloning-private-github-repository-within-organisation-in-actions and https://docs.github.com/en/authentication/connecting-to-github-with-ssh/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent#generating-a-new-ssh-key
      - name: checkout test data
        run: |
          eval `ssh-agent -s`
          ssh-add - <<< '${{ secrets.TEST_DATA_ACCESS_KEY }}'
          git submodule sync --recursive
          git submodule update --init --recursive

      # Use cached python and dependencies, install poetry
      - name: "Setup Python, Poetry and Dependencies"
        uses: packetcoders/action-setup-cache-python-poetry@main
        with:
          python-version: 3.8
          poetry-version: 1.2.2

      # Linting steps, excute all linters even if one fails
      - name: ruff
        run:
          poetry run ruff specsanalyzer specsscan tests
      - name: ruff formating
        if: ${{ always() }}
        run:
          poetry run ruff format --check specsanalyzer specsscan tests
      - name: mypy
        if: ${{ always() }}
        run:
          poetry run mypy specsanalyzer specsscan tests
