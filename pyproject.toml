[tool.poetry]
name = "specsanalyzer"
packages = [
    {include = "specsanalyzer"},
    {include = "specsscan"},
]
version = "0.1.5a0"
description = "Python package for loading and converting SPECS Phoibos analyzer data."
authors = [
    "Laurenz Rettig <rettig@fhi-berlin.mpg.de>",
    "Michele Puppin <michele.puppin@epfl.ch>",
    "Abeer Arora <arora@fhi-berlin.mpg.de>",
]
readme = "README.md"
repository = "https://github.com/mpes-kit/specsanalyzer"
documentation = "https://github.com/mpes-kit/specsanalyzer/docs"
keywords=["specs", "phoibos", "arpes"]
license = "MIT"

[tool.poetry.dependencies]
python = ">=3.8, <3.12"
h5py = ">=3.6.0"
imutils = ">=0.5.4"
ipympl = ">=0.9.1"
ipywidgets = ">=7.7.1"
matplotlib = ">=3.5.1"
numpy = ">=1.21.6"
opencv-python = ">=4.8.1.78"
pynxtools-mpes = ">=0.0.1"
python-dateutil = ">=2.8.2"
pyyaml = ">=6.0"
xarray = ">=0.20.2"
tifffile = ">=2022.5.4"
scipy = ">=1.8.0"
jupyter = {version = ">=1.0.0", extras = ["notebook"], optional = true}
ipykernel = {version = ">=6.9.1", extras = ["notebook"], optional = true}
jupyterlab-h5web = {version = ">=7.0.0", extras = ["notebook"], optional = true}

[tool.poetry.extras]
notebook = ["jupyter", "ipykernel", "jupyterlab-h5web"]

[tool.poetry.group.dev.dependencies]
pytest = ">=7.0.1"
pytest-cov = ">=3.0.0"
pytest-xdist = ">=2.5.0"
pytest-clarity = ">=1.0.1"
ruff = ">=0.1.7, <0.3.0"
mypy = ">=1.6.0"
types-pyyaml = ">=6.0.12.12"
types-requests = ">=2.31.0.9"

[tool.poetry.group.docs]
optional = true

[tool.poetry.group.docs.dependencies]
sphinx = ">=7.1.2"
sphinx-rtd-theme = ">=1.0.0"
tomlkit = ">=0.12.0"
sphinx-autodoc-typehints = ">=1.17.0"
nbsphinx = ">=0.9.3"
myst-parser = ">=2.0.0"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.coverage.report]
omit = [
    "config.py",
    "config-3.py",
]

[tool.ruff]
include = ["specsanalyzer/*.py", "specsscan/*.py", "tests/*.py"]
lint.select = [
    "E", # pycodestyle
    "W", # pycodestyle
    "PL", # pylint
]
lint.ignore = [
    "E701", # Multiple statements on one line (colon)
    "PLR0911", # Too many return statements
    "PLR0912", # Too many branches
    "PLR0913", # Too many arguments in function definition
    "PLR0915", # Too many statements
    "PLR2004", # Magic value used instead of constant
    "PLR5501", # else-if-used
    "PLW2901", # redefined-loop-name
]
lint.fixable = ["ALL"]
line-length = 100 # change the default line length number or characters.

[tool.mypy]
strict = false
ignore_missing_imports = true
follow_imports = "silent"
no_strict_optional = true
disable_error_code = "import, annotation-unchecked"
